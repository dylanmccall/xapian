skip_tags: true
# A full clone takes 30 seconds, depth 20 takes 5 seconds.
#
# Using "shallow_clone: true" downloads the commit as a ZIP file so you might
# think that would be quicker still, but actually it seems to take ~15 seconds,
# and then bootstrap fails due to there not being a ".git" directory.
clone_depth: 20
# Specify clone_folder so we can hard-code the Unix path equivalent below.
clone_folder: c:\projects\xapian
environment:
  global:
    AUTOMATED_TESTING: 1
  matrix:
  - TOOLCHAIN: msvc
    platform: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    VCVARS_BAT: "\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\""
    PYTHON3_DIR: c:\Python37-x64
install:
  - ps: |
      $env:PYTHON3 = "${env:PYTHON3_DIR}\python.exe"
  - ps: |
      $env:PATH="${env:PYTHON3_DIR}\Scripts;${env:PATH}"
  - ps: |
      Invoke-Expression "$env:PYTHON3 -m pip install sphinx" 
  - ps: |
      Invoke-WebRequest 'https://doxygen.nl/files/doxygen-1.9.1.windows.x64.bin.zip' -outfile doxygen-1.9.1.windows.x64.bin.zip
      Expand-Archive doxygen-1.9.1.windows.x64.bin.zip -DestinationPath c:\doxygen
  - ps: |
      $env:PATH="c:\msys64\usr\bin;c:\doxygen;${env:PATH}"
      $env:CONFIGOPTS="--prefix=/c/projects/xapian/out"
      $env:CONFIGOPTS+=" --host=x86_64-pc-cygwin"
      $env:CONFIGOPTS+=" --enable-static=xapian-core"
      $env:CONFIGOPTS+=" --disable-documentation"
      $env:CONFIGOPTS+=" --disable-backend-honey"
      $env:CONFIGOPTS+=" --with-python3"
  - bash -c 'time ./bootstrap --fetch-url-command="curl --retry 5 --retry-connrefused -L" xapian-core xapian-bindings'
  - if defined VCVARS_BAT call %VCVARS_BAT%
  - if "%TOOLCHAIN%"=="msvc" mkdir zlib
  - if "%TOOLCHAIN%"=="msvc" cd zlib
  - if "%TOOLCHAIN%"=="msvc" bash -c 'curl --retry 5 --retry-connrefused -L https://github.com/xapian/xapian-dev-deps/releases/download/current/zlib-1.2.11.tar.gz|tar --strip-components=1 -zxf -'
  # Don't build zlib with -MD as it seems this flag needs to be used
  # consistently across the build.
  - if "%TOOLCHAIN%"=="msvc" sed -i 's/\(^CFLAGS  *= *-nologo \)-MD /\1/' win32/Makefile.msc
  # Don't build zlib with a fixed base address on x64 as that gives linker
  # warning LNK4281.
  - if "%TOOLCHAIN%-%Platform%"=="msvc-x64" sed -i 's/-base:0x[0-9A-Fa-f]* //' win32/Makefile.msc
  - if "%TOOLCHAIN%"=="msvc" nmake -nologo -f win32\Makefile.msc
  - if "%TOOLCHAIN%"=="msvc" cd ..
  # Fetch pre-built unicode-data.cc to avoid having to get working tclsh.
  - curl --retry 5 --retry-connrefused https://oligarchy.co.uk/xapian/patches/unicode-data.cc > xapian-core\unicode\unicode-data.cc
  - ps: >-
      if ($env:TOOLCHAIN -eq "msvc") {
        $env:CC="cl -nologo"
        $env:CXX="/c/projects/xapian/INST/share/automake-1.15/compile cl -nologo"
        $env:CXXFLAGS="-EHsc"
        $env:CPPFLAGS="-I/c/projects/xapian/zlib"
        $env:AR="lib"
        $env:LDFLAGS="-Lc:/projects/xapian/zlib"
      }
  - ps: >-
      $env:PYTHON3_LIB = "/c/projects/xapian/out/python3"
build_script:
  - bash -c 'time ./configure $CONFIGOPTS'
  - bash -c 'time make -j2' < nul
  - bash -c 'time make install' < nul
test_script:
  - bash -c 'time make check VERBOSE=1' < nul
artifacts:
  - path: out
    name: xapian_windows_%platform%_py37
